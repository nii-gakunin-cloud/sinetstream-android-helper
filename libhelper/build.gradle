plugins {
  id 'com.android.library'
  id 'maven-publish'
  id "com.jfrog.bintray" version "1.8.5"
}

android {
    compileSdkVersion 31
    buildToolsVersion '31.0.0'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 31
        versionCode currentCode as Integer
        versionName currentVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    packagingOptions {
        exclude("META-INF/LICENSE*")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.android.gms:play-services-location:19.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
  publishing {
    publications {
      maven(MavenPublication) {
        from components.release
        artifact androidSourcesJar
        groupId = 'jp.ad.sinet.stream.android.helper'
        artifactId = 'libhelper'
        version = currentVersion
      }
    }
    repositories {
      maven {
        url = System.getenv('MAVEN_ENDPOINT')
        credentials(HttpHeaderCredentials) {
          name = "Job-Token"
          value = System.getenv('CI_JOB_TOKEN')
        }
        authentication {
          header(HttpHeaderAuthentication)
        }
      }
    }
  }

  bintray {
    user = project.hasProperty('bintray_user') ? bintray_user : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintray_key') ? bintray_key : System.getenv('BINTRAY_API_KEY')
    publications = ['maven']
    pkg {
      repo = 'maven'
      name = 'SINETStream-android-helper'
      licenses = ['Apache-2.0']
      websiteUrl = 'https://www.sinetstream.net'
      vcsUrl = 'https://github.com/nii-gakunin-cloud/sinetstream-android-helper.git'
      version {
        name = project.version
      }
    }
  }
}
