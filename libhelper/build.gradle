plugins {
  id 'com.android.library'
  id 'maven-publish'
}

android {
    compileSdk 35

    defaultConfig {
        minSdk 19
        targetSdk 35
        versionCode currentCode as Integer
        versionName currentVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    packagingOptions {
        jniLibs {
            excludes += ['META-INF/LICENSE*']
        }
        resources {
            excludes += ['META-INF/LICENSE*']
        }
    }

    //
    // We need to configure Android publication 'maven' for variant 'release'.
    // https://developer.android.com/build/publish-library/configure-pub-variants
    //
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }

    namespace 'jp.ad.sinet.stream.android.helper'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'
}

afterEvaluate {
  publishing {
    publications {
      maven(MavenPublication) {
        from components.release
        groupId = 'jp.ad.sinet.stream.android.helper'
        artifactId = 'libhelper'
        version = currentVersion
      }
    }
    repositories {
      maven {
        url = System.getenv('MAVEN_ENDPOINT')
        credentials(HttpHeaderCredentials) {
          name = "Job-Token"
          value = System.getenv('CI_JOB_TOKEN')
        }
        authentication {
          header(HttpHeaderAuthentication)
        }
      }
    }
  }
}
